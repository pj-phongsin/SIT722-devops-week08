name: Consolidated E-Commerce CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [develop, main]

env:
  AZURE_RESOURCE_GROUP: sit722-task9-rg
  AZURE_AKS_CLUSTER_NAME: sit722-task9-aks
  AZURE_CONTAINER_REGISTRY: sit722task9acr # Use your unique ACR name here

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Docker Images
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/product-service:latest ./src/product-service
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/order-service:latest ./src/order-service
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:latest ./src/frontend

  deploy:
    name: Deploy to AKS
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ env.AZURE_AKS_CLUSTER_NAME }}

      - name: Login to ACR
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/product-service:${{ github.sha }} ./src/product-service
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/order-service:${{ github.sha }} ./src/order-service
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:${{ github.sha }} ./src/frontend
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/product-service:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/order-service:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:${{ github.sha }}

      - name: Update Image Tags in Kubernetes Manifests
        run: |
          sed -i 's|image:.*product-service:.*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/product-service:${{ github.sha }}|' k8s/product-deployment.yml
          sed -i 's|image:.*order-service:.*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/order-service:${{ github.sha }}|' k8s/order-deployment.yml
          sed -i 's|image:.*frontend:.*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:${{ github.sha }}|' k8s/frontend-deployment.yml

      - name: Deploy All Manifests to AKS
        run: |
          kubectl apply -f k8s/
